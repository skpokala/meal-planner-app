version: '3.8'

services:
  meal-planner-frontend:
    image: ghcr.io/skpokala/meal-planner-app-frontend:latest
    container_name: meal-planner-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://YOUR_SERVER_IP:5000/api
    depends_on:
      - meal-planner-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.meal-planner-frontend.rule=Host(`meal-planner.local`)"
      - "traefik.http.services.meal-planner-frontend.loadbalancer.server.port=3000"
    networks:
      - meal-planner-network

  meal-planner-backend:
    image: ghcr.io/skpokala/meal-planner-app-backend:latest
    container_name: meal-planner-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-password123}@meal-planner-mongo:27017/meal_planner?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-meal-planner-jwt-secret-change-this-in-production}
      - PORT=5000
      - FRONTEND_URL=http://YOUR_SERVER_IP:3000
      - ML_SERVICE_URL=${ML_SERVICE_URL:-}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY:?set in Portainer environment}
    depends_on:
      - meal-planner-mongo
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.meal-planner-backend.rule=Host(`meal-planner-api.local`)"
      - "traefik.http.services.meal-planner-backend.loadbalancer.server.port=5000"
    networks:
      - meal-planner-network

  meal-planner-mongo:
    image: mongo:7.0
    container_name: meal-planner-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=meal_planner
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password123}
    volumes:
      - meal-planner-mongo-data:/data/db
      - meal-planner-mongo-config:/data/configdb
    restart: unless-stopped
    command: ["mongod", "--bind_ip_all"]
    labels:
      - "traefik.enable=false"
    networks:
      - meal-planner-network

  # Optional: MongoDB Express for database management
  # Uncomment the section below if you want a web-based MongoDB admin interface
  # and ensure port 8082 is available on your system
  #
  # meal-planner-mongo-express:
  #   image: mongo-express:latest
  #   container_name: meal-planner-mongo-express
  #   ports:
  #     - "8082:8081"  # Changed from 8081 to 8082 to avoid port conflicts
  #   environment:
  #     - ME_CONFIG_MONGODB_SERVER=meal-planner-mongo
  #     - ME_CONFIG_MONGODB_PORT=27017
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER:-admin}
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-password123}
  #     - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USER:-admin}
  #     - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-admin123}
  #   depends_on:
  #     - meal-planner-mongo
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.meal-planner-mongo-express.rule=Host(`meal-planner-db.local`)"
  #     - "traefik.http.services.meal-planner-mongo-express.loadbalancer.server.port=8081"
  #   networks:
  #     - meal-planner-network

volumes:
  meal-planner-mongo-data:
    driver: local
    labels:
      - "backup.enable=true"
      - "backup.schedule=0 2 * * *"
  meal-planner-mongo-config:
    driver: local

networks:
  meal-planner-network:
    driver: bridge
    name: meal-planner-network
    labels:
      - "app=meal-planner" 