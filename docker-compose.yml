services:
  mongo:
    image: mongo:latest
    container_name: meal-planner-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: meal_planner
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - meal-planner-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: meal-planner-backend
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - MONGODB_URI=mongodb://mongo:27017/meal_planner
      - MONGODB_DATABASE=meal_planner
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_EXPIRES_IN=7d
      - DEFAULT_ADMIN_USERNAME=admin
      - DEFAULT_ADMIN_PASSWORD=password
      - PORT=5000
      - NODE_ENV=development
      - FRONTEND_URL=http://localhost:3001
      - ML_SERVICE_URL=http://ml-service:5003
    ports:
      - "5002:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - meal-planner-network

  ml-service:
    build:
      context: ./ml
      dockerfile: Dockerfile
    container_name: meal-planner-ml-service
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - MONGODB_URI=mongodb://mongo:27017/meal_planner
      - ML_SERVICE_PORT=5003
      - ML_SERVICE_HOST=0.0.0.0
      - DEBUG=false
    ports:
      - "5003:5003"
    volumes:
      - ./ml:/app
      - ml-models:/app/models
      - ml-data:/app/data
    networks:
      - meal-planner-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:5002/api
        REACT_APP_VERSION: "1.1.103"
    container_name: meal-planner-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - meal-planner-network

volumes:
  mongo-data:
  ml-models:
  ml-data:

networks:
  meal-planner-network:
    driver: bridge 