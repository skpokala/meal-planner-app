version: '3.8'

services:
  frontend:
    image: ghcr.io/skpokala/meal-planner-app-frontend:latest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      # Optional: Override API URL if needed (defaults to nginx proxy)
      # - API_URL=http://${HOST_IP:-localhost}:5000/api
    depends_on:
      - meal-planner-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - meal-planner-network

  meal-planner-backend:
    image: ghcr.io/skpokala/meal-planner-app-backend:latest
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      # Use underscore for consistency with app defaults
      - MONGODB_URI=mongodb://meal-planner-mongo:27017/meal_planner
      - JWT_SECRET=${JWT_SECRET:-meal-planner-jwt-secret-change-this-in-production}
      - PORT=5000
      # Allow requests from any origin for containerized deployments
      - FRONTEND_URL=*
      # ML service URL (use host to reach ML via published port)
      - ML_SERVICE_URL=${ML_SERVICE_URL:-http://host.docker.internal:5003}
      # Required: Google Maps API key for geocoding (reverse + address search)
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY:?set in Portainer environment}
    depends_on:
      - meal-planner-mongo
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - meal-planner-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ml-service:
    image: ghcr.io/skpokala/meal-planner-app-ml:latest
    restart: unless-stopped
    depends_on:
      - meal-planner-mongo
    environment:
      - MONGODB_URI=mongodb://meal-planner-mongo:27017/meal_planner
      - ML_SERVICE_PORT=5003
      - ML_SERVICE_HOST=0.0.0.0
      - DEBUG=false
    # Expose externally only if you need to access ML directly; otherwise it's internal
    ports:
      - "5003:5003"
    volumes:
      - ml_models:/app/models
      - ml_data:/app/data
    networks:
      - meal-planner-network

  meal-planner-mongo:
    image: mongo:7.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=meal_planner
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - meal-planner-network

volumes:
  mongo_data:
    driver: local
  ml_models:
    driver: local
  ml_data:
    driver: local

networks:
  meal-planner-network:
    driver: bridge
