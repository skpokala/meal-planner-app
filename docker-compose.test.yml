version: '3.8'

services:
  # Test database
  mongo:
    image: mongo:latest
    container_name: meal-planner-mongo-test
    environment:
      MONGO_INITDB_DATABASE: meal_planner_test
    volumes:
      - mongo_test_data:/data/db
    networks:
      - meal-planner-test-network

  # Backend tests
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: meal-planner-backend-test
    depends_on:
      - mongo
    environment:
      - MONGODB_URI=mongodb://mongo:27017/meal_planner_test
      - JWT_SECRET=test-jwt-secret-key
      - NODE_ENV=test
      - CI=true
      - GOOGLE_MAPS_API_KEY=DUMMY_FOR_TESTS
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/coverage:/app/coverage
    networks:
      - meal-planner-test-network
    command: npm run test:ci

  # Frontend tests
  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    container_name: meal-planner-frontend-test
    environment:
      - CI=false
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./frontend/coverage:/app/coverage
    networks:
      - meal-planner-test-network
    # Keep container alive after tests so backend can finish; CI uses exit code from backend-test
    command: sh -c "npm run test:ci && tail -f /dev/null"

volumes:
  mongo_test_data:

networks:
  meal-planner-test-network:
    driver: bridge 